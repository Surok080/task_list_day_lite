@import 'rest.css';
@mixin btn {
	// outline: 1px solid rgba(111, 109, 109, 0);
	border-radius: 2px;
	padding: 4px 4px;
	width: 97px;
	border-radius: 5px;
	font-size: 16px;
	font-weight: bold;
	color: rgb(73, 73, 73);
	background-color: rgb(255, 255, 255);
	box-shadow: 4px 4px 2px rgba(122, 105, 105, 0.382);
	cursor: pointer;
	transition: all 0.3s ease-in-out;
	&:hover {
		transform: translateY(2px);
		box-shadow: 2px 2px 2px rgba(122, 105, 105, 0.382);
	}
}

body{
	background-color: rgba(122, 105, 105, 0.382);
}
.wrapper {
max-width: 450px;
margin: 0 auto;
padding: 40px 10px;
}
@media (max-width: 425px){
	.wrapper{
		padding: 10px 10px;
	}
}
.header {
	border-top: 1px solid rgb(17, 17, 17);
	border-bottom: 1px solid rgb(17, 17, 17);
	text-align: center;
	padding: 20px;
		&__title {
			font-size: 24px;
			font-weight: bold;
		}
}
.task-create {
display: flex;
border-top: 1px solid rgb(54, 54, 54);
border-bottom: 1px solid rgb(17, 17, 17);

padding: 10px 0;
		&__control {
			display: flex;
			flex-direction: column;
			flex:0 1 250px;
		}

		&__imput {
			padding: 10px 24px 10px 10px;
			& input{
				outline: 1px solid rgb(17, 17, 17);
				border-radius: 2px;
				height: 25px;
				padding: 1px 0 1px 10px;
				width: 100%;
				font-size: 18px;
			}
		}

		&__btn {
			display: flex;
			justify-content: space-between;
			padding: 10px 10px 10px 10px;
			& button{
				@include btn()
			}
		}

		&__generate {
			// width: 100%;
			display: flex;
			justify-content: center;
			padding: 10px;
			flex:1 1 auto;
		}
		&__btnAdd button{
			padding: 5px 25px;
			border-radius: 5px;
			font-size: 16px;
			color: aliceblue;
			background-color: rgb(17, 17, 17);
		}
}
@media (max-width: 425px){
	.task-create__btnAdd button {
		padding: 7px 7px;
		width: 58px;
		border-radius: 25px;
	}
}
.task {

		&__item{
			display: flex;
			border-top: 1px solid rgb(17, 17, 17);
			border-bottom: 1px solid rgb(17, 17, 17);	
			padding: 10px 0;
			&.removeItem{
				animation: opacity 1s ease-in-out;
			}
		}
		&__control {
			
			display: flex;
			flex-direction: column;
			flex:0 1 250px;
		}

		&__text {
			word-wrap: break-word;
			max-width: 230px;
			padding:0 10px 10px;
		}

		&__btn {
			padding: 10px 10px;
			display: flex;
			justify-content: space-between;
			& button {
				@include btn()
			}
		}

		&__status {
			display: flex;
			justify-content: center;
			padding: 10px;
			flex:1 1 auto;
		}

		&__status-indicator {
			display: flex;
			align-self: center;
			border: 4px solid;
			border-color: rgb(95, 15, 15);
			border-radius: 45%;
			width: 50px;
			height: 50px;
			animation: moving 5s infinite linear;
		}
		&__status-indicatorSmall{
			display: flex;
			align-self: center;
			border: 4px solid;
			border-color: rgb(95, 15, 15);
			border-radius: 40%;
			width: 40px;
			height: 40px;
			animation: moving 3s infinite linear reverse;
		}
}

@keyframes opacity {
	from {
		opacity: 1;
		transform: translateY(0px);
	}
	to {
		opacity: 0;
		transform: translateY(-100px);
	}
}

.active {
	border-color: rgb(46, 99, 46);
	// animation: moving 15s infinite linear;
}

@keyframes moving {
	100% {transform: rotate(-360deg);}
}


.element {
	/* задать анимацию «moving» к текущему элементу */
	animation: moving 3s infinite linear;

	/* указать точку координат, вокруг которой будет вращаться объект */
	transform-origin: -80px -80px;
}